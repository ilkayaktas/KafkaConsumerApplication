# Use this while running as docker container
bootstrap.servers=kafka:29092

# Use this while running local
# bootstrap.servers=localhost:29092

# Deserializer interface for converting byte arrays into the expected object type of the key and value respectively.
key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# maximum amount of time a consumer may take between calls to Consumer.poll()
max.poll.interval.ms=300000

# The maximum number of records returned in a single call to poll()
max.poll.records=10

# enables the Kafka consumer to handle committing offsets automatically for you
enable.auto.commit=true

# If a consumer instance canâ€™t locate any offsets for its topic-partition assignment(s),
# it will resume processing from the earliest available offset.
auto.offset.reset=earliest

# Kafka uses the concept of a consumer-group which is used to represent a logical single group.
# A consumer-group can be made up of multiple members all sharing the same group.id configuration.
group.id=consumer-application1

# Application specific properties
file.path=consumer-records.out
input.topic.name=group-create-topic
input.topic.partitions=5
input.topic.replication.factor=1